<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="CommunicationsLogger" kind="passive" namespace="CubeRover">
    <!--<import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
        <import_dictionary>Drv/BlockDriver/Tlm.xml</import_dictionary>-->
    <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
    
    <ports>
        <!-- Log ports -->
        <port name="LogIn" data_type="Fw::Log" kind="async_input" role="LogEvent" max_number="1">
            <comment>
            The input port for logs from Active Logger
            </comment>
        </port>
        <port name="LogOutGround" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
            <comment>
            The output log port to ground
            </comment>
        </port>
		<port name="LogOutFlash" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
            <comment>
            The output log port to S25FL064L
            </comment>
        </port>
        
        <!-- Ping ports -->
        <port name="PingIn" data_type="Svc::Ping" kind="sync_input" max_number="1">
            <comment>
            Input ping port "Health"
            </comment>
        </port>
        <port name="PingOut" data_type="Svc::Ping" kind="output" max_number="1">
            <comment>
            Output ping port "Health"
            </comment>
        </port>

	<!-- Cmd ports -->
        <port name="CmdInput" data_type="Fw::Cmd" kind="sync_input" max_number="1">
            <comment>
            The input port for Commands from Cmd Dispatcher
            </comment>
        </port>
        <port name="CmdResponse" data_type="Fw::CmdResponse" kind="output" max_number="1">
            <comment>
            The output port for responses to Commands from Cmd Dispatcher
            </comment>
        </port>
        <port name="CmdReg" data_type="Fw::CmdReg" kind="output" max_number="1">
            <comment>
            The port for registering what commands mean, not sure if input or output
            </comment>
        </port>
    </ports>

    <commands>
		<command kind="async" opcode="0" mnemonic="Send All to Ground">
			<comment>
			Send all logs to ground
			</comment>
		</command>

		<command kind="async" opcode="1" mnemonic="Send Specific Time to Ground">
			<comment>
			Send a specific log to ground based on time
			</comment>
		</command>

		<command kind="async" opcode="2" mnemonic="Send Specific Time for Component to Ground">
			<comment>
			Send a set of logs to ground based on time and component
			</comment>
		</command>

		<command kind="async" opcode="3" mnemonic="Send Specific Time for Duration to Ground">
			<comment>
			Send a set of logs to ground based on time and duration
			</comment>
		</command>
    </commands>

    <events>
    	<event id="0" name="LOG_RECV" severity="ACTIVITY_LO" format_string="Received Log from Active Logger">
			<comment>
			Recieve Log from active logger, send log to flash storage
			</comment>
		</event>

		<event id="1" name="ALL_COMMAND_RECV" severity="ACTIVITY_LO" format_string="Send all logs to Ground">
			<comment>
			Recieve Command to Send all Logs to Ground
			</comment>
		</event>

		<event id="2" name="SPECIFIC_COMMAND_RECV" severity="ACTIVITY_LO" format_string="Send log at time: %f">
			<comment>
			Recieve Command to Send a log at a specific time to Ground (may need to add args)
			</comment>
		</event>

		<event id="3" name="SPECIFIC_TYPE_COMMAND_RECV" severity="ACTIVITY_LO" format_string="Send log at time: %f of type: %s">
			<comment>
			Recieve Command to Send a log at a specific time for a specific component to Ground (may need to add args)
			</comment>
		</event>
		
		<event id="4" name="SET_OF_COMMAND_RECV" severity="ACTIVITY_LO" format_string="Send logs starting at time: %f for duration: %f">
			<comment>
			Recieve Command to Send a set of logs at a specific time for a specific duration to Ground (may need to add args)
			</comment>
		</event>
    </events>

    <telemetry>
        <channel id="0" name="" data_type="">
            <comment>
            Replace with Telemetry Values
            </comment>
        </channel>
    </telemetry>

</component>

