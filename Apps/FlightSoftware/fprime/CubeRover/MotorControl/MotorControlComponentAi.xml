<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="MotorControl" kind="passive" namespace="CubeRover" modeler="true">
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>	
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
  <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
  <import_port_type>CubeRover/CubeRoverPorts/MotorData/MotorDataPortAi.xml</import_port_type>

  <!-- PORTS -->
  <ports>
  	<!-- Command ports -->
    <port name="cmdIn" data_type="Fw::Cmd" kind="guarded_input"  max_number="1" role="Cmd"></port>

    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" max_number="1" role="CmdRegistration"></port>

    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" max_number="1" role="CmdResponse"></port>

    <!-- Logging and telemetry ports -->
    <port name="log" data_type="Fw::Log" kind="output"  max_number="1" role="LogEvent"></port>

    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1"></port>

    <port name="timeCaller" data_type="Fw::Time" kind="output" max_number="1" role="TimeGet"></port>

    <!-- Ping ports -->
    <port name="PingIn" data_type="Svc::Ping" kind="sync_input" max_number="1"></port>

    <port name="PingOut" data_type="Svc::Ping" kind="output" max_number="1"></port>

    <!-- Scheduler port -->
    <port name="schedIn" data_type="Svc::Sched" kind="sync_input" max_number="1"></port>

    <!-- TODO -->
    <!-- Still need Mode manager port(s)! -->
    <!-- Or does Motor Control assume Navigation took care of it?-->

    <!-- Motor Data port -->
    <port name="MotorDataOut" data_type="CubeRoverPorts::MotorData" kind="output" max_number="1"></port>

  </ports>

  <!-- COMMANDS -->
  <commands>
    <command kind="guarded" opcode="0x00" mnemonic="MC_MotorConfiguration">
      <args>
        <arg name="Motor_ID" type="U8">
          <comment>The motor id from 0 - 4 (Motor 0 is Front Left motor and goes counter clockwise) 4 is all motors </comment>
        </arg>
        <arg name="MotorParameter" type="ENUM">
          <enum name ="MP_CommandList">
            <item name="CURRENT_PID" />
            <item name="SPEED_PID" />
            <item name="ACCELERATION" />
            <item name="STALL_DETECTION" />
            <item name="RESET_POSITION" />
            <item name="SET_POSITION" />
            <item name="SPIN" />
            <item name="POWER_BOOST" />
          </enum>
        </arg>
        <arg type="U32" name="Value" />
      </args>
    </command>
  </commands> 

  <commands>
    <command kind="guarded" opcode="0x01" mnemonic="MC_DrivingConfiguration">
      <comment>Configure movement command</comment>
      <args>
        <arg name="CommandConfiguration" type="ENUM">
          <enum name ="CC_CommandList">
            <item name="FORWARD_CFG" />
            <item name="REVERSE_CFG" />
            <item name="LEFT_CFG" />
            <item name="RIGHT_CFG" />
          </enum>
        </arg>
        <arg name="Parameter" type="ENUM" >
          <enum name="ParameterList" >
            <item name="DISTANCE" />
            <item name="SPEED" />
            <item name="ANGLE" />
          </enum>
        </arg>
        <arg type="U8" name="Value" />
      </args>
    </command>

    <command kind="guarded" opcode="0x02" mnemonic="MC_ExecuteDriving">
      <comment>Execute one configured command</comment>
      <args>
        <arg name="DrivingCommand" type="ENUM">
          <enum name="DriveCommandList">
            <item name="GO_FORWARD"/>
            <item name="GO_REVERSE"/>
            <item name="TURN_LEFT"/>
            <item name="TURN_RIGHT"/>
          </enum>
        </arg>
      </args>
    </command>

    <command kind="guarded" opcode="0x03" mnemonic="MC_StallDetection">
    <comment> Enable / disable detection of motor stall </comment>
    <args>
      <arg name="motorStallEnable" type="ENUM">
        <enum name = "motorStallEnableList">
          <item name = "ENABLED" />
          <item name = "DISABLED" />
        </enum>
      </arg>
    </args>
    </command>

    <command kind="guarded" opcode="0x04" mnemonic="MC_PositionCounterReset">
    <comment> Reset the position counter of specific motor(s) </comment>
    <args>
      <arg name="ResetPositionCounter" type="U8" />
    </args>
    </command>

    <command kind="guarded" opcode="0x05" mnemonic="MC_UpdateTelemetry">
        <comment> Requests an update from each of the motor controllers </comment>
    </command>
  </commands> 

  <!-- EVENTS -->
  <events>
    <event id="0" name="MC_moveStarted" severity="COMMAND" format_string="Move sequence has started">
          <comment> A notification a move sequence has started </comment>
    </event>

    <event id="1" name="MC_moveComplete" severity="COMMAND" format_string="Move sequence has finished">
          <comment> A notification a move sequence has finished </comment>
    </event>

    <event id="2" name="MC_MSPFaultDetected" severity="WARNING_HI" format_string="Motor controller has detected a fault">
          <comment> A notification an MSP has thrown a fault </comment>
    </event>

    <event id="3" name="MC_MSPNotResponding" severity="WARNING_HI" format_string="Motor controller not responding">
          <comment> A notification an MSP is not communicating </comment>
    </event>

    <event id="4" name="MC_MSPNotReporting" severity="WARNING_HI" format_string="Motor controller not communicating requested data">
          <comment> A notification an MSP is not reporting data </comment>
    </event>
  </events>

  <!-- TELEMETRY -->
  <telemetry>
    <!-- Motor 0 | Front left motor -->
    <channel id="0" name="MC_FL_Encoder_Dist" data_type="I32">
      <comment>Front Left motor encoder displacement in encoder ticks</comment>
    </channel>

    <channel id="1" name="MC_FL_Current" data_type="U16">
      <comment>Front Left motor current in milliAmps</comment>
    </channel>

    <channel id="2" name="MC_FL_Speed" data_type="I16">
      <comment>Front Left motor speed in centimeters per second (positive rotation is counter clockwise</comment>
    </channel>

    <!-- Motor 1 | Front right motor -->
    <channel id="3" name="MC_FR_Encoder_Dist" data_type="I32">
      <comment>Front Right motor encoder displacement in encoder ticks</comment>
    </channel>

    <channel id="4" name="MC_FR_Current" data_type="U16">
      <comment>Front Right motor current in milliAmps</comment>
    </channel>

    <channel id="5" name="MC_FR_Speed" data_type="I16">
      <comment>Front Right motor speed in centimeters per second</comment>
    </channel>

    <!-- Motor 2 | Rear right motor -->
    <channel id="6" name="MC_RR_Encoder_Dist" data_type="I32">
      <comment>Rear Right motor encoder displacement in encoder ticks</comment>
    </channel>

    <channel id="7" name="MC_RR_Current" data_type="U16">
      <comment>Rear Right motor current in milliAmps</comment>
    </channel>

    <channel id="8" name="MC_RR_Speed" data_type="I16">
      <comment>Rear Right motor speed in centimeters per second</comment>
    </channel>

    <!-- Motor 3 | Read right motor -->
    <channel id="9" name="MC_RL_Encoder_Dist" data_type="I32">
      <comment>Rear Left motor encoder displacement in encoder ticks</comment>
    </channel>

    <channel id="10" name="MC_RL_Current" data_type="U16">
      <comment>Rear Left motor current in milliAmps</comment>
    </channel>

    <channel id="11" name="MC_RL_Speed" data_type="I16">
      <comment>Rear Left motor speed in centimeters per second</comment>
    </channel>
  </telemetry>

</component>